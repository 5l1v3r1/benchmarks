# Block for general settings.
library: general
settings:
    # Time until a timeout in seconds.
    timeout: 9000
    database: 'reports/benchmark.db'
    keepReports: 20
---
# MLPACK:
# A Scalable C++  Machine Learning Library
library: mlpack
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/cities.csv', 'datasets/faces.csv', 'datasets/iris.csv' ,
                      'datasets/wine.csv', 'datasets/ionosphere.csv', 'datasets/diabetes_X.csv']
    NMF:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/nmf.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/piano_magnitude_spectogram.csv',
                      'datasets/wine.csv', 'datasets/pendigits.csv']
              options: '-r 6 -s 42 -u multdist'
    DecisionStump:
        run: ['metric']
        script: methods/mlpack/decision_stump.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/dexter_train.csv', 'datasets/dexter_test.csv'],
                       ['datasets/optdigits_train.csv', 'datasets/optdigits_test.csv'] ]
    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/kmeans.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options: '-c 3'
    ICA:
        run: ['metric']
        iteration: 1
        script: methods/mlpack/ica.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv']

    NBC:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/nbc.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'] ]
    KPCA:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/kernel_pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/circle_data.csv', 'datasets/arcene_X.csv']
              options: '-k polynomial'
    LARS:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/lars.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                       ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                       ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'] ]
    LSH:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/lsh.py
        format: [csv, txt]
        datasets:
         - files: ['datasets/wine.csv', 'datasets/cloud.csv']
           options: '-k 3 -s 42'
    PERCEPTRON:
        run: ['metric']
        script: methods/mlpack/perceptron.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'] ]
              options: '-n 10000'
    ALLKNN:
        run: ['metric', 'watch']
        watch: ['neighbor_search', 'neighbor_search_impl', 'neighbor_search_rules',
                'nearest_neighbor_rules_impl', 'ns_traversal_info', 'unmap',
                'furthest_neighbor_sort', 'nearest_neighbor_sort', 'knn']
        iteration: 2
        script: methods/mlpack/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv', 'datasets/pendigits.csv']
              options: '-k 4 -s 42'
    ALLKFN:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/allkfn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv', 'datasets/pendigits.csv']
              options: '-k 3'
    ALLKRANN:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/allkrann.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv', 'datasets/pendigits.csv']
              options: '-k 3 -T 10'
    RANGESEARCH:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/range_search.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv']
              options: '-M 20.3'
    DET:
        run: ['metric']
        script: methods/mlpack/det.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/cloud.csv',
                     ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'] ]
    EMST:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/emst.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv']
    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv'], ['datasets/cosExp_X.csv'],
                        ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'],
                        ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]
    LocalCoordinateCoding:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/local_coordinate_coding.py
        format: [csv, txt]
        datasets:
             - files: ['datasets/wine.csv']
               options: '-k 12 -s 42'
    SparseCoding:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/sparse_coding.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/pendigits.csv']
              options: '-k 12 -s 42 -n 100'
    FastMKS:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/fastmks.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv']
              options: '-k 1 -K linear'
    NCA:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/nca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris_train.csv',
                     ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'] ]
              options: '-n 2000 -O sgd -s 42'
    HMMTRAIN:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/hmm_train.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/artificial_2DSignal.csv']
              options: '-t gaussian -n 20 -s 42'

            - files: ['datasets/artificial_1DSignal.csv']
              options: '-t discrete -n 20 -s 42'
    HMMGENERATE:
        run: ['metric']
        iteration: 3
        script: methods/mlpack/hmm_generate.py
        format: [csv, txt, xml]
        datasets:
            - files: ['datasets/artificial_2DSignal_hmm.xml']
              options: '-l 10000'
    HMMLOGLIK:
       run: ['metric']
       iteration: 3
       script: methods/mlpack/hmm_loglik.py
       format: [csv, txt, xml]
       datasets:
           - files: [ ['datasets/artificial_2DSignal.csv', 'datasets/artificial_2DSignal_hmm.xml'] ]
    HMMVITERBI:
       run: ['metric']
       iteration: 3
       script: methods/mlpack/hmm_viterbi.py
       format: [csv, txt, xml]
       datasets:
           - files: [ ['datasets/artificial_2DSignal.csv', 'datasets/artificial_2DSignal_hmm.xml'] ]
---
# MATLAB:
# Numerical computing environment and programming language.
library: matlab
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/matlab/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/cities.csv', 'datasets/faces.csv', 'datasets/iris.csv' ,
                      'datasets/wine.csv', 'datasets/ionosphere.csv', 'datasets/diabetes_X.csv']
    NMF:
        run: ['metric']
        iteration: 3
        script: methods/matlab/nmf.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/piano_magnitude_spectogram.csv', 'datasets/wine.csv', 'datasets/pendigits.csv']
              options: '-r 6 -s 42 -u multdist'
    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/matlab/kmeans.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/iris.csv', 'datasets/cloud.csv', 'datasets/USCensus1990.csv']
              options: '-c 3'
    NBC:
        run: ['metric']
        iteration: 3
        script: methods/matlab/nbc.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'] ]
    ALLKNN:
        run: ['metric']
        iteration: 1
        script: methods/matlab/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/pendigits.csv']
              options: '-k 3 -s 42'
    RANGESEARCH:
        run: ['metric']
        iteration: 3
        script: methods/matlab/range_search.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv']
              options: '-M 20.3'

    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/matlab/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                        ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'],
                        ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'] ]
    LogisticRegression:
        run: ['metric']
        iteration: 3
        script: methods/matlab/logistic_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                        ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'],
                        ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'] ]

    HMMGENERATE:
        run: ['metric']
        iteration: 3
        script: methods/matlab/hmm_generate.py
        format: [csv, txt, xml]
        datasets:
            - files: ['datasets/artificial_2DSignal_hmm.xml']
              options: '-l 10000'
    HMMVITERBI:
       run: []
       iteration: 3
       script: methods/matlab/hmm_viterbi.py
       format: [csv, txt, xml]
       datasets:
           - files: [ ['datasets/artificial_2DSignal.csv', 'datasets/artificial_2DSignal_hmm.xml'] ]
---
# Scikit-Learn: machine learning in Python
library: scikit
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/scikit/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/cities.csv', 'datasets/faces.csv', 'datasets/iris.csv' ,
                      'datasets/wine.csv', 'datasets/ionosphere.csv', 'datasets/diabetes_X.csv']
    NMF:
        run: ['metric']
        iteration: 3
        script: methods/scikit/nmf.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/piano_magnitude_spectogram.csv',
                      'datasets/wine.csv', 'datasets/pendigits.csv']
              options: '-r 6 -u alspgrad'
    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/scikit/kmeans.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/iris.csv',
                      'datasets/cloud.csv', 'datasets/USCensus1990.csv']
              options: '-c 3'
    NBC:
        run: ['metric']
        iteration: 3
        script: methods/scikit/nbc.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'] ]
    KPCA:
        run: ['metric']
        iteration: 3
        script: methods/scikit/kernel_pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/circle_data.csv', 'datasets/arcene_X.csv']
              options: '-k polynomial'
    LARS:
        run: ['metric']
        iteration: 3
        script: methods/scikit/lars.py
        format: [csv, txt]
        datasets:
           - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                       ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'] ]
    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/scikit/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv', 'datasets/pendigits.csv']
              options: '-k 3 -s 42'
    GMM:
        run: ['metric']
        iteration: 3
        script: methods/scikit/gmm.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/artificial_2DSignal.csv', 'datasets/artificial_5DSignal.csv',
                      'datasets/iris.csv', 'datasets/vehicle.csv', 'datasets/wine.csv',
                      'datasets/USCensus1990.csv']
              options: '-s 42'

    LinearRegression:
        run: []
        iteration: 3
        script: methods/scikit/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                        ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'],
                        ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'] ]
    SparseCoding:
        run: ['metric']
        iteration: 3
        script: methods/scikit/sparse_coding.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/pendigits.csv']
              options: '-k 12 -s 42 -n 100'
---
# mlpy is a Python module for Machine Learning built on top of NumPy/SciPy
# and the GNU Scientific Libraries.
library: mlpy
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/cities.csv', 'datasets/faces.csv', 'datasets/iris.csv' ,
                      'datasets/wine.csv', 'datasets/ionosphere.csv', 'datasets/diabetes_X.csv']
    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/kmeans.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/waveform.csv', 'datasets/waveform_centroids.csv'] ]
              options: '-c 2'

            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options: '-c 3'

            - files: [ ['datasets/cloud.csv', 'datasets/cloud_centroids.csv'] ]
              options: '-c 5'
    KPCA:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/kernel_pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/circle_data.csv', 'datasets/arcene_X.csv']
              options: '-k polynomial'
    LARS:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/lars.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                       ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'] ]
    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv']
              options: '-k 3 -s 42'
    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                        ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'],
                        ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'] ]
---
# Shogun - A Large Scale Machine Learning Toolbox
library: shogun
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/shogun/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/cities.csv', 'datasets/faces.csv', 'datasets/iris.csv' ,
                      'datasets/wine.csv', 'datasets/ionosphere.csv', 'datasets/diabetes_X.csv']
    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/shogun/kmeans.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/iris.csv', 'datasets/cloud.csv', 'datasets/USCensus1990.csv']
              options: '-c 3'
    KPCA:
        run: ['metric']
        iteration: 3
        script: methods/shogun/kernel_pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/circle_data.csv', 'datasets/arcene_X.csv']
              options: '-k polynomial'
    NBC:
        run: ['metric']
        iteration: 3
        script: methods/shogun/nbc.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'] ]
    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/shogun/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv']
              options: '-k 3 -s 42'
    GMM:
        run: ['metric']
        iteration: 3
        script: methods/shogun/gmm.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/artificial_2DSignal.csv', 'datasets/artificial_5DSignal.csv',
                      'datasets/iris.csv', 'datasets/vehicle.csv', 'datasets/wine.csv']
              options: '-s 42'
    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/shogun/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                        ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'],
                        ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'] ]
---
# Weka: Data Mining Software in Java
library: weka
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/weka/pca.py
        format: [arff]
        datasets:
            - files: ['datasets/cities.csv', 'datasets/faces.csv', 'datasets/iris.csv' ,
                      'datasets/wine.csv', 'datasets/ionosphere.csv', 'datasets/diabetes_X.csv']
    NBC:
        run: ['metric']
        iteration: 3
        script: methods/weka/nbc.py
        format: [arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'] ]
    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/weka/kmeans.py
        format: [arff]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/iris.csv',
                      'datasets/cloud.csv', 'datasets/USCensus1990.csv']
              options: '-c 3'
    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/weka/allknn.py
        format: [arff]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv']
              options: '-k 3 -s 42'
    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/weka/linear_regression.py
        format: [arff]
        datasets:
             - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                        ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'],
                        ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'] ]
---
# HLearn: Homomorphic machine learning
library: hlearn
methods:
    ALLKNN:
        run: ['metric']
        iteration: 2
        script: methods/hlearn/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/pendigits.csv']
              options: '-k 4 -s 42'
---
#  FLANN:
#  A Library for Fast Library for Approximate Nearest Neighbors
library: flann
methods:
    ALLKNN:
          run: ['metric']
          script: methods/flann/allknn.py
          format: [csv, txt]
          datasets:
              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv']
                options: '-k 3 -s 42 -e 0.0'
---
#  ANN:
#  A Library for Approximate Nearest Neighbor Searching
library: ann
methods:
    ALLKNN:
          run: ['metric']
          script: methods/ann/allknn.py
          format: [csv, txt]
          datasets:
              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv']
                options: '-k 3 -s 42 -e 0.0'
---
#  FLANN:
#  A Library for Fast Library for Approximate Nearest Neighbors
library: annoy
methods:
    ALLKNN:
          run: ['metric']
          script: methods/annoy/allknn.py
          format: [csv, txt]
          datasets:
              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv']
                options: '-k 3 -s 42 -e 0.0'
